
Current thing(s) to work on:
- When Users are trying to create a workout, and they add an exercise. Then they try to add another one.
In the table that's displayed in the UI, that exercise is overriden.
I want the user to see the entire workout that they're building
Then once they're done they click "done" and that workout is created.
    - THings to do:
        - Login & Register feature
        - query dynamodb to see if the user has any workouts created
        - make sure that anytime an exercise is created it goes to dynamo (and then it goes to teh UI)
        -

- Login & Register feature (this is for the previous item, because that data will be saved in a dynamo db)
    - Things to do:
        - For this feature, implement it yourself if the user wants to manually register and login using an email address
        & a password

        - Implement cognito if they want to "Sign using Google" or "sign Using Facebook"


Things/Features to do:
- When they create a workout, it should be created in dynamodb
- CRUD for workouts
    - Users should be able to view workouts
    - Users should be able to create a workout and view it
    - Users should be able to rename the workout
    - Users should be able to edit a workout

- Future AWS stuff
    - This will be hosted on a super small ec2 instance or a lightsail instance (this isn't necessary if you're running it
    directly from the lambda itself)
        - Doing this allows yout ocustomize the storage and stuff
    - Create VPC for this to be in? (shows knowledge of networking aws concepts - vpc, route table, subnets, etc) ( (this isn't necessary if you're running it
    directly from the lambda itself)
        - regarding this you can put everything in a private subnet, and put a load balancer in the vpc and then the load
        balancer can hit the instances directly so its super secure.

    - YOu can containerize this app using ecs? (super optional)

-----------------------------------------------------------------------------------------------------------------------
Login & Register Feature
- Create a python file called dynamo_utils.py
Functions to do anything dynamodb related

Ideas (Brainstorm):
1) Create a lambda function to handle all dyanmodb related functions
So you'd send a request to the lambda and it would handle the dyanmo operations

2) Create a python file calle dyanmod_utils.py and handle all dynamo logic within the flask app /instance itself and use boto3

3) Use a lambda for every function. So for register would be a lambda, you'd call that and that would ideally to do all
the dynamo stuff and then the user is registered and you move on


NOtes
- You might have issues calling a lambda to handle situations for you.

- Might be easier to handle things at the instance level?

- MOre code in the instance level...

- You'd still need dyanmo code in the instance when you're doing CRUD stuff or you outsource all of that to a lambda
    - That means you have ONE lambda handling all dynamodb logic

More thoughts
1) You have one lambda doing all the operations.
So you have one lambda doing ALL dyanmodb stuff

2) You have lambdas handling other options - like register, login.
Those lambdas would draw out a dynamod_utils.py and use functions from those to facilitate.
Then you have instances in your code where the user is editing workouts, deleting them, starting a workout, doing stuff.
Then they can draw from that file called dynamo_utils.py